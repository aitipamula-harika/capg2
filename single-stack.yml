---
AWSTemplateFormatVersion: '2010-09-09'
Resources:
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: CodeBuildRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
        
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: codebuild-role
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            Sid: "VisualEditor0"
            Effect: "Allow"
            Action: 
            - ec2:*
            - s3:PutObject
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketAcl
            - s3:DeleteObject
            - s3:PutObjectAcl
            - s3:GetBucketLocation
            - s3:Get*
            - s3:PutObje
            - s3:List*
            - ssm:GetParameters 
            - logs:FilterLogEvents
            - logs:GetLogEvents
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: "*"
            
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: CodepipelineRole
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: codepipeline-service-role
        PolicyDocument:
          Statement:
          - Action:
            - iam:PassRole
            Resource: "*"
            Effect: Allow
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  cloudformation.amazonaws.com
          - Action:
            - codebuild:BatchGetProjects
            - codebuild:CreateProject
            - codebuild:ListCuratedEnvironmentImages
            - codebuild:ListProjects
            - codebuild:BatchGetBuilds
            - codebuild:StartBuild
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            Resource: "*"
            Effect: Allow
          - Action: 
            - cloudwatch:*
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:PutObject
            Resource:
            - arn:aws:s3:::codepipeline*
            Effect: Allow
          - Action:
            - codebuild:BatchGetProjects
            - codebuild:CreateProject
            - codebuild:ListCuratedEnvironmentImages
            - codebuild:ListProjects
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            - s3:PutObject
            - cloudformation:*
            Resource: "*"
            Effect: Allow
          - Action:
            - cloudformation:CreateStack
            - cloudformation:DeleteStack
            - cloudformation:DescribeStacks
            - cloudformation:UpdateStack
            - cloudformation:CreateChangeSet
            - cloudformation:DeleteChangeSet
            - cloudformation:DescribeChangeSet
            - cloudformation:ExecuteChangeSet
            - cloudformation:SetStackPolicy
            - cloudformation:ValidateTemplate
            Resource: "*"
            Effect: Allow
          - Action:
            - cloudformation:ValidateTemplate
            Resource: "*"
            Effect: Allow
          - Action:
            - lambda:InvokeFunction
            - lambda:ListFunctions
            - lambda:InvokeAsyc
            - iam:CreateRole
            - iam:GetInstanceProfile
            - iam:PutRolePolicy
            - lambda:CreateFunction
            - lambda:InvokeAsync
            - lambda:UpdateAlias
            - lambda:CreateAlias
            - lambda:GetFunctionConfiguration
            - lambda:AddPermission
            - lambda:UpdateFunctionCode
            Resource: "*"
            Effect: Allow
          Version: '2012-10-17' 
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: CodePipelineLambdaRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - cloudformation.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: codePipeline-lambda
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            Sid: "VisualEditor0"
            Effect: "Allow"
            Action: 
            - iam:*
            - s3:*
            - lambda:*
            - cloudformation:*
            - apigateway:*
            - ec2:*
            - dynamodb:*
            Resource: "*"          